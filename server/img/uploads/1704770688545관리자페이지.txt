
-----------------------------테스트 사항

1. 관리자 메인 승인/반려처리   
2. 메인 사업자 등록증 확인 
3. 공지사항 등록, 수정 삭제 확인  (notice테이블, img테이블 다 확인) 
4. QNA  (답변 조회, 등록, 수정, 삭제 >>에따라 답변 상태변하는거) 
5. 이벤트 등록하면  만들어진 쿠폰부터 생성,  insertid 를 받아서 이벤트 테이블에 등록  , 수정 , 삭제 (이벤트만 삭제, 쿠폰은 삭제안됨)
6. 쿠폰 등록, 수정, 삭제는 미발급된 쿠폰만
7. 쿠폰 각 등급별(활동회원만)로 일괄발급, 이미 발급한 건은 이미 발급되었습니다 처리/  >> 발급되면 삭제버튼 사라짐, 수정만 가능 
8. 차트 
9. 생일쿠폰 발급 , 기간만료 쿠폰 스케쥴러로 업데이트


-----------------------------수정사항

css
1.모달창...(메인 사업자, 등록업체관리 사업자, 운영중 업체 사업자) 수정하기 
2.공지사항 / qna 인포 폼..수정 
3. 일반회원 한건 조회 사진.. 
4. 차트 기준 



코드
1. 한글경로 안하는게 좋대  >>나중에 한번에 처리 


///대본짜기 















-------------------------------

인기많은 가게  - 결제 많은순 , 찜 많은 순 ,  별점 높은 순 

인기 많은 카테고리 (결제건수)

111329
111330
111334
111339
111342
111345
111350
111353
111355
111356
111365
111372
111381
111386
111404

11195 ~11258

   google.charts.load("current", { packages: ["corechart", "bar"] });
      google.charts.setOnLoadCallback(this.drawBasic);
------------------------
  var data = google.visualization.arrayToDataTable(this.chartData2);

      var options = this.chartOptions2;

      var chart = new google.visualization.BarChart(this.$refs.chart2);

      chart.draw(data, options);

 
-----------------------------------------------------------------------------

라우터 경로   값넘기는 방식 <params , query>
1.
 <router-link
                      class="nav-link"
                      :to="{
                        name: 'allQnaSeller',
                        params: { division: '판매자' },
                      }"
                    >
                      QnA
                    </router-link>
					
					>>admin.js에 
					
					 {
      path: "allQnaSeller/:division",
      name: "allQnaSeller",
      component: AllQnaSeller, //판매자qnalist
    },
	
	추가 >> 컴포넌트에서 파람즈 값 받아오기
	
	
2.  라우터링크 이동 
  <router-link class="nav-link" to="/admin/manageRs">
                      등록업체관리
                    </router-link>
		

3. 라우터 푸쉬
<button @click="$router.push('/admin/allQnaSeller')">전체목록</button> 버튼
  this.$router.push({ name: "couponList" });



4. 페이지 이동하면서 값 가져가기   
this.$router.push({
        path: "/admin/adminQnaInfo",
        query: { qnaCode: no },
      }); 
	  
	  
	  
-------------------------------------------------------------------------------------------	  
	  axios  뷰 >  노드  경로  <params , query , body.parma>
	  
	  1. 파람즈 
	  뷰 : get(`/node/adminSellerQnaCategory/${this.category}`)
		노드 :  let data = req.params.category;
		
		2. post, put에서 
		 뷰 :  let result = await axios.post("/node/admincoupon", data);
		 노드:  let data = req.body.param; 
		 
		 
		 3. 쿼리스트링 
		 뷰:     .get(`/api/reply?bno=${this.bno}`)
        .catch((err) => console.log(err));

		노드:   app.get("/reply", async (req, res) => {
  //쿼리스트링 ?key=value..
  let data = req.query.bno;
  res.send(await mysql.query("selectReply", data));
});
		

-----------------------------------------------------------------------------------------------

params/body/query 3가지임 
https://hajoung56.tistory.com/78


import Swal from 'sweetalert2'; 이거 추가하고

Swal.fire({
                  title: '등록완료',
                  icon: 'success',
               }); 


  Swal.fire({
          title: "등록실패",
          icon: "error",
        });
		
		
		
		
		  confirmdelete() {
      
      let result = confirm("정말삭제할래?");
      if (result) {
        this.deleteInfo();
      } else {
        alert("삭제취소~~@!");
      }
    },
-----------------------------------------------------------------------------------------------
 
 
<관리자 메인페이지>
 

<승인업체목록>

b1영업승인
b2영업중지
b3 반려 
b4 승인대기


category,
rs_name,
address,
gu_gun,
rs_desc,
tag,
rs_img,
deposit,
phone,
like_cnt,
seat_cnt,
rs_status,
holiday,
star_taste,
star_price,
star_service,
seller_id

1-1 판매자가 업체를 등록하면  업체테이블에 인서트.  업체테이블 업체상태 칼럼 디폴트 승인대기 들어감 

승인 대기목록에 업체상태 승인대기인 애들이 출력 


1-2  관리자가 사업자 등록증 확인후 승인하기 버튼을 누르면>>상태칼럼 영업승인로 업데이트>> 관리자 등록업체관리 목록에 출력됨 + 
홈페이지 화면에 뿌려짐 > 판매자는 영업승인 상태 확인가능 

반려버튼 누르면 >> 업체 상태 컬럼 반려로 변경 >> 판매자는 반려상태 확인가능 


-----------------------------------------------------------------------------------------------


<관리자 메인페이지>

<뿜게시판 일반/판매자 공통>  뿜 

 f1 회원정보
 f2 업체문의
 f3 예약/결제
 f4 기타문의 


c1답변대기
c2답변완료
 
J1 일반유저
J2 판매자
 

  1-1 메인페이지에서 답변상태 = 답변대기 qna 확인 가능 일반/판매자 구분해서 출력 
  1-2 카테고리별(드롭박스) 이용해서 카테고리별 필터해서 출력, 작성일자 오래된 순으로 출력 
  1-3 제목 클릭해서 들어가면 상세화면 나오고  답변등록 버튼있음 
  1-4 답변 등록하면 답변상태 > 답변완료로 변경  답변 수정/삭제 버튼 으로 변경 > 미답변 목록에서 사라짐  
  
  
  
<일반뿜, 판매자뿜 리스트 화면> 

qna_code
title
content
write_date
qna_status  >>답변완료 답변대기 
ans_code 
writer   
qna_divison    >> 카테고리..
user_divison >>일반유저/판매자

  
  1-1 상단에 전체 / 답변대기 / 답변완료 버튼 
  1-2 카테고리 드롭박스로 선택하면 그에 맞는애만 작성일자 순으로 출력 
  1-3 제목 클릭해서 들어가면 상세화면 나오고  답변등록 버튼있음 
  1-4 답변 등록하면 답변상태 > 답변완료로 변경 >> 수정/삭제 버튼 으로 변경 

 
 (등록할때 1:1문의면 유저구분에 일반, 이라고 자동으로 찍히게끔 해야함 ) 
 
 
 
 	<button @click="goAdmin()">관리자</button>
		<br />
		<router-link to="/admin/home" @click="logout()">로그아웃</router-link>
		<router-link to="/seller/rslist">판매자</router-link>

 관리자 답변시 
 content  
 write_date
 ans_code  글번호 가져와서 인서트 + 

 qna_status>> 그 글번호 답변완료로 업데이트 
 

 
 <form type="hidden">
        <label for="content">내용</label>
        <input type="text" id="content" />
      </form>
	  
	  
	  
//관리자 답변하기 + 답변업데이트
app.post("/adminQnaInsert", async (req, res) => {
  let data = req.body.param;
  let result = await mysql.query("adminQnaInsert", data);
  let qnacode = req.body.param.ans_code;

  res.send(result);
});

async function updateReply(qnacode) {}

//답변완료 건 업데이트
app.put("/adminQnaUpdate/:no", async (req, res) => {
  let data = req.params.no;
  let result = await mysql.query("adminQnaUpdate", data);
  res.send(result);
});

 -----------------------------------------------------------------------------------------------

  
<공지사항 일반/판매자 공통>  공지사항 




	h1 상
    h2 하
	
	J1 일반유저
    J2 판매자

 
  1-1 관리자가 등록한 공지사항 리스트 화면 (일반/판매자용 따로 구분해서 출력) 
  1-2 등록하기 버튼 누르면 등록 폼 출력. 제목,내용,파일첨부,중요도구분해서 등록 (seller에서 등록하면 유저구분에 판매자,  user에서등록하면 유저구분에 일반) 이라고 등록 되어야함 
  1-3 단건조회 , 수정 , 삭제 기능 

  
  notice_code>>자동 
  write_date  >>sysdate
  view_cnt >>자동 , 안해도됨
  user_id  >>관리자 
  user_division  ==유저구분 >>구분해서들어가게..
  
  notice_important  >>선택하게 
  title   
  content 

 -----------------------------------------------------------------------------------------------
 
<등록업체관리>  업체

b1영업승인
b2영업중지
b3 반려
b4 승인대기


현재 홈페이지에 등록중인 업체 리스트 출력 (영업승인)상태인 애들만보이게끔.
+영업중지인 애들도 따로 탭 만들어서 보든지 하기 

category
rs_name
address
gu_gun
rs_desc
tag
rs_img
deposit
phone
like_cnt
seat_cnt
rs_status
holiday
star_taste
star_price
star_service
seller_id



-----------------------------------------------------------------------------------------------
  
<판매자회원관리>  판매자회원 , 업체 

현재 판매자 회원 정보 리스트 출력 

누르면 해당 회원이 운영중인 업체 정보 뜨도록 하기 
  
  
 seller_id
 seller_name
  phone
 gender
 birthday
 user_division
----------------------------------------------------------------------------------------------- 
    
<일반회원관리>  회원 


user_id
user_name
nickname
grade
phone
profile
gender
birthday
join_date
penalty
user_status
reserve_cnt
banned_cnt

penalty_enddate


a1활동회원
a2탈퇴회원
a3정지회원

1-1 일반 회원 리스트 출력  이용정지 회원은 이용정지 기간이  끝에 기록됨 
1-2 본인이 당일예약취소 패널티가 회원에게 자동으로 1점씩 부여됨 >>패널티 5점 이상이면 > 회원상태를 정지회원으로 >> 정지횟수 1회 카운트시킴 > 패널티 초기화 
> 정지기간 마지막에 찍어주기 
1-3 로그인 시도시 정지회원으로 3일간 정지기간 알람창 찍어주고 
1-4 3일 지나면 정지해제(스케쥴러가처리) 해주면서 회원상태를 다시 활동회원으로 돌려줌 
1-5 회원 클릭하면 회원정보가 상세 조회됨  (정지횟수 보여주기)

----------------------------------------------------------------------------------------------- 


<쿠폰관리>  쿠폰  / 유저 쿠폰   1-7(생일이면 로그인시에 쿠폰발급)  >>>>>>>>>>>>>> 생일쿠폰만 처리하면됨 
 
<쿠폰발급탭> 
1-2 쿠폰 발급 탭에서 등급별로 회원리스트들이 출력  >  쿠폰선택 > 발급 하면 해당 등급의 회원에게만 해당 쿠폰이 발급 


<쿠폰관리탭>

1-3 쿠폰관리 탭 누르면 현재 까지 만들어진 쿠폰리스트들이 출력됨

1-4 쿠폰 등록하기 누르면 쿠폰 등록하는 폼 나옴 
1-5 쿠폰명/할인율/시작일자/종료일자  >> 등록완료 
1-6 한건 조회하면 수정/삭제 나오게끔 하기 
1-7(생일이면 로그인시에 쿠폰발급) 


<coupon>
coupon_name
discount_rate
end_date
coupon_code   >>outo
start_date



select user_id from user where grade='맛초보';

select *from user_coupon;

select *from user;

insert into user_coupon set user_id ='ss', coupon_code=5 , coupon_status = '사용가능';



----------------------------------------------------------------------------------------------- 


<신고 관리>   신고 / 댓글 

    g1 정상댓글
    g2 신고중
    g3 처리완료
    g4 반려

1-1  유저가  댓글을 신고 
1-2  신고 테이블에 댓글신고상태 신고중으로 변경 , 댓글테이블 댓글신고상태 정상댓글>신고중으로 변경 
1-3  신고자는 자신의 마이페이지에서  신고현황 파악 가능.  
1-4  댓글신고상태가 신고중인 댓글을 다른유저가 다시 신고하면 이미 신고처리가 들어간 댓글입니다 처리 
1-5  관리자 신고내역 페이지에서 댓글신고상태가 신고중인 댓글 리스트 출력  끝에는 [승인] /[반려] 버튼
1-6  승인 버튼 누를시 해당 댓글 블라인드 처리,   댓글신고상태 : 정상댓글에서 >> 처리완료    댓글신고상태 > 처리완료로 변경 
1-7  반려 버튼 누를시 댓글신고상태 신고중 > 정상댓글로 변경 , 댓글신고상태  반려로 처리  
  
 ----------------------------------------------------------------------------------------------- 

  

<이벤트관리> 이벤트 쿠폰    >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>첨부파일 해결만..하면..됨 + 서버에서 처리하도록...하기 

1-1 관리자가 등록한 이벤트 리스트 출력 
1-2 이벤트 등록을 누르면 이벤트를 만들면서 쿠폰정보를 입력 

1-2  첨부파일 등록후  이벤트 등록을 누르면... 

1-3 등록하기를 누르면 이벤트 테이블에 인서트 됨과 동시에 쿠폰테이블에 
쿠폰명
할인율
쿠폰유효기간 (시작/종료) 인서트 
 

1-4 한건 조회하면 이벤트 수정/삭제 가능 

<event>
banner_img  >>첨부파일
main_img   >>첨부파일

eventstart_date
eventend_date
titleㅛ7
content
event_code  >>auto 
write_date  >>sysdate
writer     >>admin
coupon_code  fk  쿠폰에서 받아서 넣고 .. 


<coupon>
coupon_name
discount_rate
end_date
coupon_code >>auto 
start_date


   
----------------------------------------------------------------------------------------------- 


<차트관리> 업체/리뷰/ 결제테이블 count 
예약횟수/리뷰많은순/별점 높은 순 


----------------------------------------------------------------------------------------------- 


자식컴포넌트 생성되는 시점에 데이터가 있다면
변경되는걸 감지하고.. 마무리 

qna_code가 있으면 ... 자식컴포넌트에 값을 넘기게





